#+latex_class: cn-article
#+title: ET 框架学习笔记（二）－－网络交互相关
#+author: deepwaterooo 

* Protobuf 相关
- 因为 Protobuf 相产原消息，原【参考项目】里是添加在 Model 层的。昨天晚上不是说可以倒着追（就像活宝妹跟着亲爱的表哥后面追亲爱的表哥一样。。。）从打包的源码里去看，哪些内容是打时Model 程序域里的。但是感觉走得稍微远了一点儿
- 先改简单的就是：把 enum 写查那个 Card 类的消息里，再看会怎么样
* 写在最后：反而是自己每天查看一再更新的
- 因为感觉还是不曾系统性地读ET7 的源码，或者说有效阅读，因为没有带着实际问题的看源码，感觉都不叫看读源码呀。这里会记自己的感觉需要赶快查看的地方。
- 【ET 框架的整体架构】：感觉把握不够。常常命名空间分不清。要把这个大的框架，比较高层面的架构再好好看下。然后就是对自顶向下的不同层级场景，所需要的主要的不同组件，分不清，仍需要再熟悉一下源码
- 【问题】：某些消息，还分不清是内网还是外网消息，暂时先放一下，到时再改
- 【问题】：上次那个ET-EUI 框架的时候，曾经出现过 opcode 不对应，也就是说，我现在生成的进程间消息，有可能还是会存在服务器码与客户端码不对应，这个完备的框架，这次应该不至于吧？
- 【ClientComponent】：新框架里重构丢了，去找怎么替代？那么现在去追一下，客户端的起始与场景加载或是切换大致过程。它变成了什么客户端场景管理？
- 【UIType】部分类：这个类出现在了三四个不同的程序域，现在重构了，好像添加得不对。要再修改
* 现在的修改内容，记忆
- 【任何时候，活宝妹就是一定要嫁给亲爱的表哥！！！】        
- 【活宝妹坐等亲爱的表哥，领娶活宝妹回家！爱表哥，爱生活！！！】
* TODO 
- *Windows 下 org-mode 有几个【BUG：】* 1.org-mode 不能自动识别模式，除第一次加载可以正确，其它再加载不识别 org-mode; 2.org-export-to-pdf 在我换成为 msys64 里的 emacs 后就坏掉了。因为要花时间修，暂时还放着
  - org-mode 是被我误删除了原 compile 好的 org-mode 里的文件。可是现在对于两个大文件无法处理，与 org-mode 其实没有任何相关。只是台式机电脑CPU 或是内存不足。以前总结算法题出大文件的时候，也出过这样的问题。所以目前这个平台上，只能处理小文件。同样的是 fontify 的问题。我觉得同样与电脑配置相关。因为它时灵时不灵的。所以这个平台已经没法再好好工作了。。。【爱表哥，爱生活！！！任何时候，活宝妹就是一定要嫁给亲爱的表哥！！！】这个平台上，这个 org-mode 也不能生成健全的 table-of-contents, 看着这个平台的性能表现真差急呀。。。不死心地又试了狠久，还是破平台的CPU 与内存表现不稳定的问题。不用怀疑自己的 snippets. 任何时候，活宝妹就是一定要嫁给亲爱的表哥！！！
- *【IStartSystem:】* 感觉还有点儿小问题。认为：我应该不需要同文件两份，一份复制到客户端热更新域。我认为，全框架应该如其它接口类一样，只要一份就可以了。 *【晚点儿再检查一遍】*
- *【Protobuf 里进程间传递的游戏数据相关信息：】* 这个现在成为重构的主要 compile-error. 因为找不到类。需要去弄懂
  - 感觉这里有步自己没有做，就是必须使用Protobuf 第三方库，直接把 .proto 里的消息编译成真正的 .cs 文件的步骤，我没有做？！！！又或者说是我的环境没能真正配置好。可是问题是，前面第一个项目的ET-EUI 与客户端的网络连接似乎没有问题。但那个时候消息少，不存在如今需要 enum 等 Proto2CS.cs 文件定义之外的逻辑。 *【我觉得，这里，自己得配置好环境！】*
  - 【Proto2CS】: 进程间消息里的，【牌相关的】，尤其是它们所属的命名空间，没写对，现在总是找不到定义。
  - 包括Identity, Weight,Suits,抢不抢地主【抢不抢庄】，以及可能的反不反主牌花色等。
  - 找不到的那些类，感觉更多的是命名空间没能开对。同一份源码一式三份，分别放在【客户端】【双端】【服务端】下只有【客户端】下可以自动识别，并且 Protobuf 里的 enum 生成的 .cs 与参考项目不同。不知道是否是 Protobuf 版本问题，还是我没注意到的细节。
  - *【Identity】与【Suits/Weight】三个【enum】* ：外网消息里，怎么会找不到呢？再回去检查一遍。下午要把这个弄通，要开始思路怎么设计重构拖拉机项目。
- Match 【匹配服】：不知道我哪根筋搭错，以为没有匹配服。可是它的配置。。。再一次从服务端看一遍起始源码，把匹配服的地址加载与获取找出来。。。
- 去把【拖拉机房间、斗地主房间组件的，玩家什么的一堆组件】弄明白
- 把参考游戏里，打牌相关的逻辑与模块好好看下，方便自己熟悉自己重构项目的源码后，画葫芦画飘地重构
- 【任何时候，活宝妹就是一定要嫁给亲爱的表哥！！！爱表哥，爱生活！！！】
* 拖拉机游戏：【重构OOP/OOD 设计思路】
- 自己是学过，有这方面的意识，但并不是说，自己就懂得，就知道该如何狠好地设计这些类。现在更多的是要受ET 框架，以及参考游戏手牌设计的启发，来帮助自己一再梳理思路，该如何设计它。
- 【GamerComponent】玩家组件：是对一个房间里四个玩家的（及其在房间里的坐位位置）管理（分东南西北）。可以添加移除玩家。
- 【爱表哥，爱生活！！！活宝妹就是一定要嫁给亲爱的表哥！爱表哥，爱生活！！！】

